<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_knight</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_knightparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//do I have an arrow to load in the ballista?
havearrow = false

//can I attack?
canattack = true
//how long between i can attack?
canattacktime = 30

canmove = true

//This controls when player can exit attacking animation, set in alarm 3
attacking = false
//Sets alarm from the above
attackingtime = 30

//Have i blocked
blocked = false
//For how long do i block
blockingtime = 120

//How long before runattack can happen? This sets time
runtimertime = 60
//This one counts up
runtimer = 0


movetoattack = false

move = false

imagexscale = 1

walkspeed = 5

hp = 3

y = 624

//Choose states "idle" "blocking" "run" "runattack"
state = "idle"

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*runtimertime = 0
state = "idle"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///canmove = true
canmove = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///hp -- if down and no enemies are around, kill knight
hp --
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///room_goto(rm_start) IF DEAD, MOVE ALONG
room_goto(rm_start)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///attacking = false ATTACK ALARM
attacking = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///blocked = false BLOCK ALARM
blocked = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///movetoattack = false (ATTACK ALARM)
movetoattack = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///canattack = true ATTACK ALARM
canattack = true

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///This is the movement code 
attack = keyboard_check(vk_down)
moveleft = keyboard_check(vk_left)
moveright = keyboard_check(vk_right)
block = keyboard_check_pressed(vk_up)

/*if state != "runattack" &amp;&amp; moveleft || moveright  
{state = "run"
script_execute(scr_knightrun)}

if attack &amp;&amp; canattack = true &amp;&amp; state != "runattack"
{state = "attack"
script_execute(scr_knightattack)}
*/


if moveleft &amp;&amp; movetoattack = false  &amp;&amp; canmove = true &amp;&amp; state != "down" &amp;&amp; state != "dead"
    {
    blocked = false
    move = true
    imagexscale = -1
    x -= walkspeed
    image_xscale = imagexscale
    sprite_index = spr_knight_run
    image_speed = 0.3
    runtimer += 1
    } 
    
if moveright &amp;&amp; movetoattack = false &amp;&amp; canmove = true &amp;&amp; state != "down" &amp;&amp; state != "dead"
    {
    blocked = false
    move = true
    imagexscale = 1
    x += walkspeed
    image_xscale = imagexscale
    sprite_index = spr_knight_run
    image_speed = 0.3
    runtimer += 1
    }

//if !moveleft || !moveright
//{move = false}

x = min(x,room_width-16)
x = max(x,16)

if attack &amp;&amp; canattack = true &amp;&amp; state != "down" &amp;&amp; state != "dead"
    {if moveleft &amp;&amp; runtimer &gt;= runtimertime || moveright &amp;&amp; runtimer &gt;= runtimertime
    {movetoattack = true
    sprite_index = spr_knight_runattack
    image_speed = 0.2
    if alarm[1] = -1
    alarm[1] = 15
    runtimer = 0
    } else    
    {if movetoattack = false &amp;&amp; move = false &amp;&amp; canattack = true 
    {sprite_index = spr_knightattack
    image_speed = 0.2
    alarm[0] = canattacktime
    var animation;
    animation = instance_create(x,y,obj_knightattackanimation)
    animation.imagexscale = imagexscale
    runtimer = 0
    attacking = true
    alarm[3] = attackingtime
    canattack = false
    }
    else 
    {if movetoattack = false &amp;&amp; move = true &amp;&amp; canattack = true 
    {canmove = false
    sprite_index = spr_knightattack
    image_speed = 0.2
    alarm[10] = 15
    alarm[0] = canattacktime
    attacking = true
    alarm[3] = attackingtime
    canattack = false
    var animation;
    animation = instance_create(x,y,obj_knightattackanimation)
    animation.imagexscale = imagexscale
    runtimer = 0
    }}}} 

if block &amp;&amp; blocked = false &amp;&amp; state != "dead" &amp;&amp; state != "down"
{alarm[2] = blockingtime
blocked = true
sprite_index = spr_knightblock
}

    
if !attack &amp;&amp; !moveleft &amp;&amp; !moveright &amp;&amp; blocked = false &amp;&amp; attacking = false &amp;&amp; state != "dead" &amp;&amp; state != "down"
//{ if sprite_index = spr_knightattack &amp;&amp; image_number == -1 
{sprite_index = spr_knightidle
    image_speed = 0.03
    runtimer = 0
    move = false}//}




/*if sprite_index = spr_knightattack &amp;&amp; image_index &gt;=3 &amp;&amp; canattack = true 
    {
    if image_index == image_number - 1
    {sprite_index = spr_knightidle
    image_speed = 0
    }}*/

//This places an arrow in a ballista that is near
var ballista;
ballista = instance_nearest(x,y, obj_ballista)
if havearrow = true &amp;&amp; distance_to_object(ballista) &lt;= 10 &amp;&amp; ballista.arrow = false
{ballista.arrow = true
havearrow = false
}

if hp == 1
{state = "down"
} 

if state == "down"
{script_execute(scr_knightdown)
}

if hp &lt;= 0 &amp;&amp; state != "down"
    {
    state = "dead"
    }
    
if state == "dead"
{script_execute(scr_knightdead)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_arrow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if havearrow = false
    {
    havearrow = true
    with (other)
        {
        instance_destroy()
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(100, 100, runtimer)
if hp &lt;= 0
{draw_sprite_ext( spr_gameover, -1, room_width/2, room_height/2,1 ,image_yscale ,0 ,c_white , 1 )}
draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
